{
  "hash": "577028b23128dbdcef11147ab874511c",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: MNIST\n---\n\n\n\n\n\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nusing TaijaData: load_mnist\nusing CounterfactualExplanations.Models: load_mnist_mlp, load_mnist_ensemble\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nX, y = load_mnist()\nK = size(y, 1)\nD = size(X, 1)\nmlp = load_mnist_mlp().model\nf_mlp(x) = mlp(x)\nens = load_mnist_ensemble().model\nf_ens(x) = sum(map(mlp -> mlp(x), ens))/length(ens)\nbatch_size = 100\n```\n:::\n\n\n## Sampling\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nùíüx = Uniform(0,1)\nùíüy = Categorical(ones(K) ./ K)\nsampler = UnconditionalSampler(ùíüx; input_size=(D,))\nconditional_sampler = ConditionalSampler(ùíüx, ùíüy; input_size=(D,))\nopt = ImproperSGLD()\nn_iter = 256\n```\n:::\n\n\n### Conditional Draws\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\n_w = 1500\nplts = []\nneach = 10\nfor i in 1:10\n    x = conditional_sampler(f_mlp, opt; niter=n_iter, y=i, n_samples=neach)\n    plts_i = []\n    for j in 1:size(x,2)\n        xj = reshape(x[:,j], (28,28))\n        plts_i = [plts_i..., heatmap(rotl90(xj), axis=nothing, cb=false)]\n    end\n    plt = plot(plts_i..., size=(_w,0.10*_w), layout=(1,10))\n    plts = [plts..., plt]\nend\nplot(plts..., size=(_w,_w), layout=(10,1))\n```\n:::\n\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\n_w = 1500\nplts = []\nneach = 10\nfor i in 1:10\n    x = conditional_sampler(f_ens, opt; niter=n_iter, y=i, n_samples=neach)\n    plts_i = []\n    for j in 1:size(x,2)\n        xj = reshape(x[:,j], (28,28))\n        plts_i = [plts_i..., heatmap(rotl90(xj), axis=nothing, cb=false)]\n    end\n    plt = plot(plts_i..., size=(_w,0.10*_w), layout=(1,10))\n    plts = [plts..., plt]\nend\nplot(plts..., size=(_w,_w), layout=(10,1))\n```\n:::\n\n\n### Unconditional Draws\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\n_w = 1500\nplts = []\nneach = 10\nfor i in 1:10\n    x = sampler(f_mlp, opt; niter=n_iter, n_samples=neach)\n    plts_i = []\n    for j in 1:size(x,2)\n        xj = reshape(x[:,j], (28,28))\n        plts_i = [plts_i..., heatmap(rotl90(xj), axis=nothing, cb=false)]\n    end\n    plt = plot(plts_i..., size=(_w,0.10*_w), layout=(1,10))\n    plts = [plts..., plt]\nend\nplot(plts..., size=(_w,_w), layout=(10,1))\n```\n:::\n\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\n_w = 1500\nplts = []\nneach = 10\nfor i in 1:10\n    x = sampler(f_ens, opt; niter=n_iter, n_samples=neach)\n    plts_i = []\n    for j in 1:size(x,2)\n        xj = reshape(x[:,j], (28,28))\n        plts_i = [plts_i..., heatmap(rotl90(xj), axis=nothing, cb=false)]\n    end\n    plt = plot(plts_i..., size=(_w,0.10*_w), layout=(1,10))\n    plts = [plts..., plt]\nend\nplot(plts..., size=(_w,_w), layout=(10,1))\n```\n:::\n\n\n",
    "supporting": [
      "samplers_files"
    ],
    "filters": []
  }
}